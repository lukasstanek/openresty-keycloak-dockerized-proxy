version: '2'
services:
  openresty:
    build: openresty/. 
    container_name: openresty
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "./certs:/etc/nginx/certs:ro"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
    restart: always
    networks:
      - proxy
  dockergen:
    image: jwilder/docker-gen:0.7.3
    container_name: dockergen
    command: -notify-sighup openresty -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    depends_on:
      - openresty
    volumes_from:
      - openresty
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl"
    restart: always
    networks:
      - proxy
    environment:
      KEYCLOAK_REDIRECT_URI: keycloak.localhost
      KEYCLOAK_HOST: keycloak:8080
      KEYCLOAK_REALM: master

  test:
    image: wordpress
    networks:
      - proxy
    environment:
      KEYCLOAK_ENABLED: 'true'
      VIRTUAL_HOST: wordpress.localhost

  postgres:
      image: postgres
      # volumes:
        # - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
  keycloak:
      image: jboss/keycloak
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_PASSWORD: password
        VIRTUAL_HOST: keycloak.localhost
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
        KEYCLOAK_HOSTNAME: keycloak
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
      networks:
        - proxy
        - default
      ports:
        - 8080:8080
      depends_on:
        - postgres
networks:
  proxy:
